************************************************************************************
*********************************** MAE Project ************************************
************************************************************************************

// Path to .jar Files: MAEProject/src/KostasPackage.
// Η εντολή που διαβάζει το αρχείο στο excelReader.java (Γραμμή 18) θα χρειαστεί τρ-
// οποποίηση.
   

	Country.java:
Η υλοποίηση της κλάσης που θα χρησιμοποιηθεί για αποθήκευση των χωρών. Περιέχει όλα
τα attributes που χρειάζεται μαζί με ένα HashMap ονόματι DataBase που θα χρησιμεύσει
αργότερα, στο HashMap αποθηκεύονται Έτη & τελευταία μέτρηση Πληθυσμού. Επίσης το at-
tibute Population μετράει την τελευταία μέτρηση Πληθυσμού. Πέρα των attributes όλες
οι μέθοδοι που περιέχει είναι setters & getters που θα χρειαστούν αργότερα.

	Main.java:
Η μέθοδος που υλοποιεί το κύριο παράθυρο και καλεί το παράθυρο του γραφίματος, του
Toast message και την μέθοδο που διαβάζει το Excel File. Πρώτα δημιουργούμε τις στή-
λες και θέτουμε τα ονόματα τους και το ποιό attribute θα χρησιμοποιήσουν απο το Cou-
ntry για να θέσουν τις τιμές τους. Αφού τις αρχικοποιήσουν καλείται η μέθοδος Proce-
ss() του excelReader που εξηγείται παρακάτω ποιά είναι η λειτουργία της(*). Δημιουρ-
γούμε ένα αντικείμενο TableView, θέτουμε τις τιμές του μέσω του αντικειμένο Observa-
bleList country. Δημιουργούμε 2 κουμπιά ένα Exit και ένα για Chart και τα ορίζουμε
μέσα σε ένα Layout HBox ώστε να μπούν οριζόντια στο Scene. Έπειτα ορίζουμε το Table-
View σε ένα VBox ώστε να μπεί κατακόρυφα στο Scene και θέτουμε και τα δύο Layout με-
σα σε ένα BorderPane. Αν πατηθεί το κουμπί Chart ενεργοποιείται το Graph.window(**).
Αν πατήσουμε πάνω στον πίνακα ελέγχουμε με ένα setOnMouseClicked αν πατήσαμε 2 φορές
και παίρνουμε το Index (θέση) του πίνακα που πατήσαμε και καλούμε την μέθοδο message
του Τοast(***) με παραμέτρους το ObservableList country, το index και το primarySta-
ge.

	(*)excelReader.java:
H μέθοδος γυρνάει μια λίστα ObservableList που έχει για κάθε στοιχείο της μια κλάση
Country. Πρώτα διαβάζουμε το αρχείο για αρχικοποιούμε ενα αντικείμενο της κλάσης XS-
SFWorkbook που δέχεται σαν όρισμα το αρχείο, και έπειτα το αρχείο workbook θα το χρ-
ησιμοποιήσουμε για να δημιουργήσουμε ένα αντικείμενο XSSFSheet ώστε να πάρουμε την 
σελίδα που μας ενδιαφέρει, στην προκειμένη περίπτωση είναι η πρώτη (0). Αρχικοποιού-
με ένα αντικείμνο της κλάσης ObservableList με στοιχεία Country που θα το ονομάσουμε
statistics και θέτουμε το year ως τον πρώτο χρόνο που είναι γνωστός (1950). Ξεκινάμε
απο την γνωστή γραμμή (44) ώστε να αποθηκεύουμε τις χώρες. Αποθηκεύουμε το row και 
ελέγχουμε αν η 6η στήλη αυτης της γραμμή γράφει Country/Area ώστε να αποφύγουμε τις
υπείρους. Αν είναι Country/Area τότε δημιουργούμε ένα αντικείμενο Country και με τις
μεθόδους setter αποθηκεύουμε καρφωτά τα Attributes (Όνομα Χώρας, Κωδικός,Index κλπ).
Έπειτα σε ένα for loop ξεκινάμε απο την γνωστή 8η στήλη και αποθηκεύουμε στο HashMap
του αντικειμένου την χρονιά (κρατώντας ένα variable year που μετά την ολοκλήρωση του
loop γυρνάει στην τιμή 1950 για την επόμενη χώρα) και τον πληθυσμό. Αποθηκεύουμε και
την τελευταία χρονιά και τον πληθυσμό της τελευταίας μέτρησης. Προσθέτουμε μετά το 
αντικείμενο στο ObservableList statistics ώστε να το επιστρέψουμε στο τέλος.

	(**)Graph.java:
Για να θέσουμε την τελική τιμή του X άξονα παίρνουμε την τελική χρονία μέτρησης απο
το αντικείμενο country που το παίρνουμε σαν όρισμα απο την main. Δημιουργούμε δεύτε-
ρο stage, θέτουμε όνομα, ComboBox για την μπάρα και σε κάθε στοιχείο της βάζουμε το
όνομα χώρας. xAxis απο το 1950 μέχρι το τελικό έτος. Δημιουργούμε κουμπί κλεισίματος
και αν ο χρήστης πατήσει πάνω σε ένα στοιχείο του ComboBox παίρνουμε το όνομα της 
χώρας με το getValue() και δημιουργούμε αντικείμενο XYChart ώστε να θέσουμε τα στατ-
ιστικά της χώρας. Ελέγχουμε όλο τον πίνακα country για να βρούμε την χώρα που επιλέ-
χθηκε και μετά μέσω του HashMap που είναι το DataBase προσθέτουμε χρονία & πληθυσμό.
Τα κουμπιά τα τα βάζουμε σε Layout ΗΒοx και το Graph κατευθείαν στο BorderPane μαζί
με το HBox. Θέτουμε το primaryStage ώς πατέρα (έτσι ώστε να μην κλείσει μέχρι να κλ-
είσουμε το συγκεκριμένο παράθυρο), με τις initOwner και initModality.

	(***)Τοast.java
Mε το index βρίσκουμε την θέση του πίνακα που ψάχνουμε, και αποθηκέυουμε το όνομα,
το Index και τον πληθυσμό σε μεταβλητές. Αυτά τα τρία τα ορίζουμε μέσα σε ένα Label.
Δημιουργούμε ένα τετράγωνο και με τα setArcHeight & setArcWidth το κάνουμε να έχει 
κυρτές γωνίες και τέλος θέτουμε στο Label και στο Τετράγωνο την λειτουγία να εξαφαν-
ίζονται. Με KeyValue βάζουμε την αρχική και τελική τιμή και των δύο για το opacity,
με τα KeyFrame όριζουμε σε πόση διάρκεια θέλουμε να συμβεί η μετάβαση και με το Time
line τα βάζουμε σε κίνηση. Όλα αυτά υλοποιούνται μέσα σε ένα Popup που το ορίζουμε 
μέσα στο primaryStage.

